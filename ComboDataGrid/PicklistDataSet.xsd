<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PicklistDataSet" targetNamespace="http://tempuri.org/PicklistDataSet.xsd" xmlns:mstns="http://tempuri.org/PicklistDataSet.xsd" xmlns="http://tempuri.org/PicklistDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PicklistConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PicklistConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ComboData.Properties.Settings.GlobalReference.Default.PicklistConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblGenderTableAdapter" GeneratorDataComponentClassName="tblGenderTableAdapter" Name="tblGender" UserDataComponentName="tblGenderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblGender" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblGender] WHERE (([Id] = @Original_Id) AND ([GenderShort] = @Original_GenderShort) AND ([GenderLong] = @Original_GenderLong))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GenderShort" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderShort" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GenderLong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenderLong" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblGender] ([GenderShort], [GenderLong]) VALUES (@GenderShort, @GenderLong);
SELECT Id, GenderShort, GenderLong FROM tblGender WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GenderShort" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderShort" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GenderLong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenderLong" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, GenderShort, GenderLong FROM dbo.tblGender</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblGender] SET [GenderShort] = @GenderShort, [GenderLong] = @GenderLong WHERE (([Id] = @Original_Id) AND ([GenderShort] = @Original_GenderShort) AND ([GenderLong] = @Original_GenderLong));
SELECT Id, GenderShort, GenderLong FROM tblGender WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@GenderShort" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderShort" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GenderLong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenderLong" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_GenderShort" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="GenderShort" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GenderLong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenderLong" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblGender" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="GenderShort" DataSetColumn="GenderShort" />
              <Mapping SourceColumn="GenderLong" DataSetColumn="GenderLong" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblGradeTableAdapter" GeneratorDataComponentClassName="tblGradeTableAdapter" Name="tblGrade" UserDataComponentName="tblGradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblGrade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblGrade] WHERE (([Id] = @Original_Id) AND ([GradeYear] = @Original_GradeYear))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GradeYear" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GradeYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblGrade] ([GradeYear]) VALUES (@GradeYear);
SELECT Id, GradeYear FROM tblGrade WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GradeYear" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GradeYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, GradeYear FROM dbo.tblGrade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblGrade] SET [GradeYear] = @GradeYear WHERE (([Id] = @Original_Id) AND ([GradeYear] = @Original_GradeYear));
SELECT Id, GradeYear FROM tblGrade WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GradeYear" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GradeYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GradeYear" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GradeYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblGrade" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="GradeYear" DataSetColumn="GradeYear" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblMaritalStatusTableAdapter" GeneratorDataComponentClassName="tblMaritalStatusTableAdapter" Name="tblMaritalStatus" UserDataComponentName="tblMaritalStatusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblMaritalStatus" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblMaritalStatus] WHERE (([Id] = @Original_Id) AND ([MaritalStatus] = @Original_MaritalStatus))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MaritalStatus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaritalStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblMaritalStatus] ([MaritalStatus]) VALUES (@MaritalStatus);
SELECT Id, MaritalStatus FROM tblMaritalStatus WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MaritalStatus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaritalStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, MaritalStatus FROM dbo.tblMaritalStatus</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblMaritalStatus] SET [MaritalStatus] = @MaritalStatus WHERE (([Id] = @Original_Id) AND ([MaritalStatus] = @Original_MaritalStatus));
SELECT Id, MaritalStatus FROM tblMaritalStatus WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MaritalStatus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaritalStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MaritalStatus" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MaritalStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblMaritalStatus" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="MaritalStatus" DataSetColumn="MaritalStatus" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblPickListTableAdapter" GeneratorDataComponentClassName="tblPickListTableAdapter" Name="tblPickList" UserDataComponentName="tblPickListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblPickList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblPickList] WHERE (([Id] = @Original_Id) AND ([cboPicklistName] = @Original_cboPicklistName) AND ([dbPickListFileName] = @Original_dbPickListFileName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_cboPicklistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPicklistName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dbPickListFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dbPickListFileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblPickList] ([cboPicklistName], [cboPickListDescription], [dbPickListFileName]) VALUES (@cboPicklistName, @cboPickListDescription, @dbPickListFileName);
SELECT Id, cboPicklistName, cboPickListDescription, dbPickListFileName FROM tblPickList WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@cboPicklistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPicklistName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@cboPickListDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPickListDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dbPickListFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dbPickListFileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, cboPicklistName, cboPickListDescription, dbPickListFileName FROM dbo.tblPickList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblPickList] SET [cboPicklistName] = @cboPicklistName, [cboPickListDescription] = @cboPickListDescription, [dbPickListFileName] = @dbPickListFileName WHERE (([Id] = @Original_Id) AND ([cboPicklistName] = @Original_cboPicklistName) AND ([dbPickListFileName] = @Original_dbPickListFileName));
SELECT Id, cboPicklistName, cboPickListDescription, dbPickListFileName FROM tblPickList WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@cboPicklistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPicklistName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@cboPickListDescription" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPickListDescription" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dbPickListFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dbPickListFileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_cboPicklistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="cboPicklistName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dbPickListFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dbPickListFileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblPickList" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="cboPicklistName" DataSetColumn="cboPicklistName" />
              <Mapping SourceColumn="cboPickListDescription" DataSetColumn="cboPickListDescription" />
              <Mapping SourceColumn="dbPickListFileName" DataSetColumn="dbPickListFileName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblSuburbTableAdapter" GeneratorDataComponentClassName="tblSuburbTableAdapter" Name="tblSuburb" UserDataComponentName="tblSuburbTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblSuburb" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblSuburb] WHERE (([Id] = @Original_Id) AND ([Suburb] = @Original_Suburb))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Suburb" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Suburb" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblSuburb] ([Suburb]) VALUES (@Suburb);
SELECT Id, Suburb FROM tblSuburb WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Suburb" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Suburb" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Suburb FROM dbo.tblSuburb</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblSuburb] SET [Suburb] = @Suburb WHERE (([Id] = @Original_Id) AND ([Suburb] = @Original_Suburb));
SELECT Id, Suburb FROM tblSuburb WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Suburb" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Suburb" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Suburb" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Suburb" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblSuburb" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Suburb" DataSetColumn="Suburb" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="tblTownTableAdapter" GeneratorDataComponentClassName="tblTownTableAdapter" Name="tblTown" UserDataComponentName="tblTownTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PicklistConnectionString (Settings)" DbObjectName="dbo.tblTown" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[tblTown] WHERE (([Id] = @Original_Id) AND ([Town] = @Original_Town))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Town" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Town" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[tblTown] ([Town]) VALUES (@Town);
SELECT Id, Town FROM tblTown WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Town" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Town" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Town FROM dbo.tblTown</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[tblTown] SET [Town] = @Town WHERE (([Id] = @Original_Id) AND ([Town] = @Original_Town));
SELECT Id, Town FROM tblTown WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Town" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Town" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Town" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Town" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[D:\05-CHURCH\85-PARISHREGISTRY\SAMPLES\COMBODATA\COMBODATA\PICKLIST.MDF].dbo.tblTown" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Town" DataSetColumn="Town" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PicklistDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="PicklistDataSet" msprop:Generator_UserDSName="PicklistDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="tblGender" msprop:Generator_TableClassName="tblGenderDataTable" msprop:Generator_TableVarName="tabletblGender" msprop:Generator_TablePropName="tblGender" msprop:Generator_RowDeletingName="tblGenderRowDeleting" msprop:Generator_RowChangingName="tblGenderRowChanging" msprop:Generator_RowEvHandlerName="tblGenderRowChangeEventHandler" msprop:Generator_RowDeletedName="tblGenderRowDeleted" msprop:Generator_UserTableName="tblGender" msprop:Generator_RowChangedName="tblGenderRowChanged" msprop:Generator_RowEvArgName="tblGenderRowChangeEvent" msprop:Generator_RowClassName="tblGenderRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="GenderShort" msprop:Generator_ColumnVarNameInTable="columnGenderShort" msprop:Generator_ColumnPropNameInRow="GenderShort" msprop:Generator_ColumnPropNameInTable="GenderShortColumn" msprop:Generator_UserColumnName="GenderShort">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GenderLong" msprop:Generator_ColumnVarNameInTable="columnGenderLong" msprop:Generator_ColumnPropNameInRow="GenderLong" msprop:Generator_ColumnPropNameInTable="GenderLongColumn" msprop:Generator_UserColumnName="GenderLong">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblGrade" msprop:Generator_TableClassName="tblGradeDataTable" msprop:Generator_TableVarName="tabletblGrade" msprop:Generator_TablePropName="tblGrade" msprop:Generator_RowDeletingName="tblGradeRowDeleting" msprop:Generator_RowChangingName="tblGradeRowChanging" msprop:Generator_RowEvHandlerName="tblGradeRowChangeEventHandler" msprop:Generator_RowDeletedName="tblGradeRowDeleted" msprop:Generator_UserTableName="tblGrade" msprop:Generator_RowChangedName="tblGradeRowChanged" msprop:Generator_RowEvArgName="tblGradeRowChangeEvent" msprop:Generator_RowClassName="tblGradeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="GradeYear" msprop:Generator_ColumnVarNameInTable="columnGradeYear" msprop:Generator_ColumnPropNameInRow="GradeYear" msprop:Generator_ColumnPropNameInTable="GradeYearColumn" msprop:Generator_UserColumnName="GradeYear">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblMaritalStatus" msprop:Generator_TableClassName="tblMaritalStatusDataTable" msprop:Generator_TableVarName="tabletblMaritalStatus" msprop:Generator_TablePropName="tblMaritalStatus" msprop:Generator_RowDeletingName="tblMaritalStatusRowDeleting" msprop:Generator_RowChangingName="tblMaritalStatusRowChanging" msprop:Generator_RowEvHandlerName="tblMaritalStatusRowChangeEventHandler" msprop:Generator_RowDeletedName="tblMaritalStatusRowDeleted" msprop:Generator_UserTableName="tblMaritalStatus" msprop:Generator_RowChangedName="tblMaritalStatusRowChanged" msprop:Generator_RowEvArgName="tblMaritalStatusRowChangeEvent" msprop:Generator_RowClassName="tblMaritalStatusRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="MaritalStatus" msprop:Generator_ColumnVarNameInTable="columnMaritalStatus" msprop:Generator_ColumnPropNameInRow="MaritalStatus" msprop:Generator_ColumnPropNameInTable="MaritalStatusColumn" msprop:Generator_UserColumnName="MaritalStatus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblPickList" msprop:Generator_TableClassName="tblPickListDataTable" msprop:Generator_TableVarName="tabletblPickList" msprop:Generator_TablePropName="tblPickList" msprop:Generator_RowDeletingName="tblPickListRowDeleting" msprop:Generator_RowChangingName="tblPickListRowChanging" msprop:Generator_RowEvHandlerName="tblPickListRowChangeEventHandler" msprop:Generator_RowDeletedName="tblPickListRowDeleted" msprop:Generator_UserTableName="tblPickList" msprop:Generator_RowChangedName="tblPickListRowChanged" msprop:Generator_RowEvArgName="tblPickListRowChangeEvent" msprop:Generator_RowClassName="tblPickListRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="cboPicklistName" msprop:Generator_ColumnVarNameInTable="columncboPicklistName" msprop:Generator_ColumnPropNameInRow="cboPicklistName" msprop:Generator_ColumnPropNameInTable="cboPicklistNameColumn" msprop:Generator_UserColumnName="cboPicklistName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cboPickListDescription" msprop:Generator_ColumnVarNameInTable="columncboPickListDescription" msprop:Generator_ColumnPropNameInRow="cboPickListDescription" msprop:Generator_ColumnPropNameInTable="cboPickListDescriptionColumn" msprop:Generator_UserColumnName="cboPickListDescription">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dbPickListFileName" msprop:Generator_ColumnVarNameInTable="columndbPickListFileName" msprop:Generator_ColumnPropNameInRow="dbPickListFileName" msprop:Generator_ColumnPropNameInTable="dbPickListFileNameColumn" msprop:Generator_UserColumnName="dbPickListFileName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblSuburb" msprop:Generator_TableClassName="tblSuburbDataTable" msprop:Generator_TableVarName="tabletblSuburb" msprop:Generator_TablePropName="tblSuburb" msprop:Generator_RowDeletingName="tblSuburbRowDeleting" msprop:Generator_RowChangingName="tblSuburbRowChanging" msprop:Generator_RowEvHandlerName="tblSuburbRowChangeEventHandler" msprop:Generator_RowDeletedName="tblSuburbRowDeleted" msprop:Generator_UserTableName="tblSuburb" msprop:Generator_RowChangedName="tblSuburbRowChanged" msprop:Generator_RowEvArgName="tblSuburbRowChangeEvent" msprop:Generator_RowClassName="tblSuburbRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Suburb" msprop:Generator_ColumnVarNameInTable="columnSuburb" msprop:Generator_ColumnPropNameInRow="Suburb" msprop:Generator_ColumnPropNameInTable="SuburbColumn" msprop:Generator_UserColumnName="Suburb">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="tblTown" msprop:Generator_TableClassName="tblTownDataTable" msprop:Generator_TableVarName="tabletblTown" msprop:Generator_TablePropName="tblTown" msprop:Generator_RowDeletingName="tblTownRowDeleting" msprop:Generator_RowChangingName="tblTownRowChanging" msprop:Generator_RowEvHandlerName="tblTownRowChangeEventHandler" msprop:Generator_RowDeletedName="tblTownRowDeleted" msprop:Generator_UserTableName="tblTown" msprop:Generator_RowChangedName="tblTownRowChanged" msprop:Generator_RowEvArgName="tblTownRowChangeEvent" msprop:Generator_RowClassName="tblTownRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Town" msprop:Generator_ColumnVarNameInTable="columnTown" msprop:Generator_ColumnPropNameInRow="Town" msprop:Generator_ColumnPropNameInTable="TownColumn" msprop:Generator_UserColumnName="Town">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblGender" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblGrade_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblGrade" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblMaritalStatus_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblMaritalStatus" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblPickList_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblPickList" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblSuburb_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblSuburb" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="tblTown_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:tblTown" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>